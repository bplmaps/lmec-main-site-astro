---
import Layout from '../../../layouts/Layout.astro';
import { createSlug } from '../../../lib/utils';
import Card from "../../../components/Article/Card.astro";
import Pagination from "../../../components/Pagination.astro";
import { useStoryblokApi } from "@storyblok/astro";
import type { Tag } from '../../../lib/types';
import type { ISbResult } from '@storyblok/astro';

export async function getStaticPaths() {
  const storyblokApi = useStoryblokApi();

  const tagsResponse = await storyblokApi.get('cdn/tags', {
    version: String(import.meta.env.STORYBLOK_IS_PREVIEW) == 'true' ? 'draft' : 'published',
    starts_with: 'main-site/',
  })
  let tags = tagsResponse.data.tags
  tags = Object.values(tags)
  tags = tags.map((tag: Tag) => {
    return {
      params: {
        slug: createSlug(tag.name),
      },
    }
  })

  return tags;
}

const { slug } = Astro.params

const storyblokApi = useStoryblokApi()

const tagsResponse = await storyblokApi.get('cdn/tags', {
  version: String(import.meta.env.STORYBLOK_IS_PREVIEW) == 'true' ? 'draft' : 'published',
  starts_with: 'main-site/',
})

let tags = tagsResponse.data.tags;
tags = Object.values(tags);
tags = tags.map((tag: Tag) => {
  return {
    name: tag.name,
    taggings_count: tag.taggings_count,
    slug: createSlug(tag.name),
  }
})
const tag = tags.find((x: any) => x.slug === slug);

const currentPage = 1;
const storiesPerPage = 10;
const storiesResponse: ISbResult = await storyblokApi.get('cdn/stories', {
  version: String(import.meta.env.STORYBLOK_IS_PREVIEW) == 'true' ? 'draft' : 'published',
  per_page: storiesPerPage,
  page: currentPage,
  with_tag: tag.name,
  starts_with: 'main-site/',
});
const totalStories = Number(storiesResponse.total);
const totalPages = Math.ceil(totalStories / storiesPerPage);
let stories = storiesResponse.data.stories;
stories = Object.values(stories);
stories = stories.map((story: any) => {
  return {
    params: {
      title: story.name,
      description: story.content.description,
      slug: story.slug,
      headerImage: story.content.headerImage,
      eventDate: story.content.eventDate,
      publishedAt: story.content.publishDate,
      author: story.content.author,
      contentType: story.content.component,
    },
  }
})
---

<Layout title={tag.name} description="We use maps, geography, and history to explore the connections between places and people in Boston, New England, and beyond. Our collection of a quarter million goegraphic objects, our educational programs, and free exhibitions bring the power of historical geography to everyone.">
  <section class="section">
    <div class="row">
      {stories.map((story: any) => (
        <article class="col-sm-6 mb-5">
          {story.params.contentType === 'event-page' &&
            <Card href={`/event/${story.params.slug}`} thumbnail={story.params.headerImage} title={story.params.title} date={story.params.eventDate} />
          }
          {story.params.contentType === 'article-page' &&
            <Card href={`/articles/${story.params.slug}`} thumbnail={story.params.headerImage} title={story.params.title} description={story.params.description} date={story.params.publishedAt} author={story.params.author} />
          }
        </article>
      ))}
      <div class="col-12 mt-4">
        <Pagination urlBase={`/tags/${tag.slug}`} maxPagesToShow={5} currentPage={currentPage} totalPages={totalPages} />
      </div>
    </div>
  </section>
</Layout>
